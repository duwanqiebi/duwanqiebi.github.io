---
layout:     post
category: [Thymeleaf, 框架学习]
title:      "Thymeleaf学习(三)"
subtitle:   "thymeleaf流程控制"
date:       2016-05-03 12:00:00
author:     "独顽且鄙"
header-img: "img/post-bg-2015.jpg"
catalog:    true
tags:
    - Thymeleaf
---

## 迭代循环

#### th:each

我们在模板中最常用的循环就是表格了，在示例程序中就有这样一个例子---**/WEB-INF/templates/product/list.html** ，在这个页面中，我们将查询出的所有产品放到list中，并将list存入上下文中。


<pre class="prettyprint linenums">
public void process(
        HttpServletRequest request, HttpServletResponse response,
        ServletContext servletContext, TemplateEngine templateEngine) {

    ProductService productService = new ProductService();
    List&lt;Product&gt; allProducts = productService.findAll(); 

    WebContext ctx = new WebContext(request, servletContext, request.getLocale());
    ctx.setVariable("prods", allProducts);

    templateEngine.process("product/list", ctx, response.getWriter());
}
</pre>

在模板中，我们用th:each来进行循环
<pre class="prettyprint linenums">
&lt;table&gt;
    &lt;tr&gt;
       &lt;th&gt;NAME&lt;/th&gt;
       &lt;th&gt;PRICE&lt;/th&gt;
       &lt;th&gt;IN STOCK&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr th:each="prod : ${prods}"&gt;
       &lt;td th:text="${prod.name}"&gt;Onions&lt;/td&gt;
       &lt;td th:text="${prod.price}"&gt;2.41&lt;/td&gt;
       &lt;td th:text="${prod.inStock}? #{true} : #{false}"&gt;yes&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;
</pre>

我们不仅可以通过**th:each** 来迭代List，还可以用来迭代很多对象，例如：

- 所有实现了java.util.Iterable接口的对象
- 所有实现了java.util.Map的对象
- 数组
- 所有对象--因为都可以看做只包含自身的列表

#### 迭代状态

Thymeleaf提供了一组迭代状态，方便在循环时使用

- **index** ，当前索引，从0开始
- **count** ，当前索引，从0开始
- **size** ，被迭代对象的总数，例如List的size
- **current** ，The iter variable for each iteration(官方原文，没太明白)
- **even/odd** ，boolean值，当前的迭代是否是奇数或偶数
- **first/last** ，boolean值，当前的迭代是否是第一个或最后一个

我们通常都有这样的需求，表格为了美观，会隔行变色。
![](http://i3.piimg.com/00de6777ea8d3f44.png)
这时我们就可以使用迭代变量的**even/odd** 状态，使用方法如下：
<pre class="prettyprint linenums">
&lt;table&gt;
  &lt;tr&gt;
    &lt;th&gt;NAME&lt;/th&gt;
    &lt;th&gt;PRICE&lt;/th&gt;
    &lt;th&gt;IN STOCK&lt;/th&gt;
  &lt;/tr&gt;
  &lt;tr th:each="prod,iterStat : ${prods}" th:class="${iterStat.odd}? 'odd'"&gt;
    &lt;td th:text="${prod.name}"&gt;Onions&lt;/td&gt;
    &lt;td th:text="${prod.price}"&gt;2.41&lt;/td&gt;
    &lt;td th:text="${prod.inStock}? #{true} : #{false}"&gt;yes&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;
</pre>

在上面的代码中，**iterStat**是我们创建的迭代状态变量。如果没有创建，Thymeleaf会自动创建一个状态变量，名字就是迭代变量的名字加上**Stat**后缀：
<pre class="prettyprint linenums">
&lt;table&gt;
  &lt;tr&gt;
    &lt;th&gt;NAME&lt;/th&gt;
    &lt;th&gt;PRICE&lt;/th&gt;
    &lt;th&gt;IN STOCK&lt;/th&gt;
  &lt;/tr&gt;
  &lt;tr th:each="prod : ${prods}" th:class="${prodStat.odd}? 'odd'"&gt;
    &lt;td th:text="${prod.name}"&gt;Onions&lt;/td&gt;
    &lt;td th:text="${prod.price}"&gt;2.41&lt;/td&gt;
    &lt;td th:text="${prod.inStock}? #{true} : #{false}"&gt;yes&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;
</pre>

## 条件表达式

#### if unless

例：
<pre class="prettyprint linenums">
&lt;a href="comments.html"
   th:href="@{/product/comments(prodId=${prod.id})}" 
   th:if="${not #lists.isEmpty(prod.comments)}"&gt;view&lt;/a&gt;
</pre>

代码运行的结果就是，如果prod.comments不是空的，就输出<a>标签，如下图：
![](http://i3.piimg.com/00de6777ea8d3f44.png)

#### switch

例：
<pre class="prettyprint linenums">
&lt;div th:switch="${user.role}"&gt;
  &lt;p th:case="'admin'"&gt;User is an administrator&lt;/p&gt;
  &lt;p th:case="#{roles.manager}"&gt;User is a manager&lt;/p&gt;
  &lt;p th:case="*"&gt;User is some other thing&lt;/p&gt;
&lt;/div&gt;
</pre>

其中**th:case="*"**就是switch中的default

